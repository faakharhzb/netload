name: Build Binaries

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: linux-binary
            os_name: linux
            ext: ""
          - os: windows-latest
            artifact_name: windows-binary
            os_name: windows
            ext: ".exe"
          - os: macos-latest
            artifact_name: macos-binary
            os_name: macos
            ext: ""
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          
      - name: Set binary name
        id: binname
        run: |
          VERSION="${{ github.event.release.tag_name }}"
          ARCH=$(uname -m)
          BINNAME="netload-${VERSION}-${{ matrix.os_name }}-${ARCH}"
          echo "BINNAME=$BINNAME" >> $GITHUB_ENV

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v2
        if: ${{ matrix.nuitka }}
        with:
          version: ${{ matrix.clang-version }}

      - name: Install Linux system dependencies
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt update --fix-missing && sudo apt install -y patchelf ccache

      - name: Install Windows system dependencies
        if: matrix.os == 'windows-latest'
        run: choco install ccache -y

      - name: Install macOS system dependencies
        if: matrix.os == 'macos-latest'
        run: |
          brew install ccache libmagic
          echo "SDKROOT=$(xcrun --sdk macosx --show-sdk-path)" >> $GITHUB_ENV

      - name: Run build command
        shell: bash
        run: |
            python -m nuitka --standalone --clang --output-dir=dist netload.py 

      - name: Make binaries executable
        if: matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest'
        run: chmod +x ./*dist/netload || true
        
      - name: Rename output binary
        run: |
          FILE=$(ls dist | grep -E "^main(\.exe)?$")
          mv "dist/$FILE" "dist/$BINNAME${{ matrix.ext }}"
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: dist/*

      - name: Archive files
        shell: bash
        run: |
          version=${GITHUB_REF#refs/tags/}
          extra="README.md LICENSE"
          cd dist
          cp ../{README.md,LICENSE} .
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            7z a "$BINNAME.zip" $BINNAME $extra
          elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            7z a "$BINNAME.zip" $BINNAME${{ matrix.ext }} $extra
          else   
            7z a "$BINNAME.zip" $BINNAME $extra
          fi
          cd ..
      
  upload-release-assets:
    if: ${{ github.event.release }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: release-binaries
          
      - name: List release-binaries contents
        run: ls -l release-binaries
        
      - name: List linux-binary contents
        run: ls -l release-binaries/linux-binary
        
      - name: List windows-binary contents
        run: ls -l release-binaries/windows-binary
        
      - name: List macos-binary contents
        run: ls -l release-binaries/macos-binary
        
      - name: Upload binaries to release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            release-binaries/linux-binary/*
            release-binaries/windows-binary/*
            release-binaries/macos-binary/*
            name: Build Binaries

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: linux-binary
            os_name: linux
            ext: ""
          - os: windows-latest
            artifact_name: windows-binary
            os_name: windows
            ext: ".exe"
          - os: macos-latest
            artifact_name: macos-binary
            os_name: macos
            ext: ""
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          
      - name: Set binary name
        id: binname
        run: |
          VERSION="${{ github.event.release.tag_name }}"
          ARCH=$(uname -m)
          BINNAME="netload-${VERSION}-${{ matrix.os_name }}-${ARCH}"
          echo "BINNAME=$BINNAME" >> $GITHUB_ENV

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v2
        if: ${{ matrix.nuitka }}
        with:
          version: ${{ matrix.clang-version }}

      - name: Install Linux system dependencies
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt update --fix-missing && sudo apt install -y patchelf ccache

      - name: Install Windows system dependencies
        if: matrix.os == 'windows-latest'
        run: choco install ccache -y

      - name: Install macOS system dependencies
        if: matrix.os == 'macos-latest'
        run: |
          brew install ccache libmagic
          echo "SDKROOT=$(xcrun --sdk macosx --show-sdk-path)" >> $GITHUB_ENV

      - name: Run build command
        shell: bash
        run: |
            python -m nuitka --standalone --clang --output-dir=dist netload.py 

      - name: Make binaries executable
        if: matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest'
        run: chmod +x ./*dist/netload || true
        
      - name: Rename output binary
        run: |
          FILE=$(ls dist | grep -E "^main(\.exe)?$")
          mv "dist/$FILE" "dist/$BINNAME${{ matrix.ext }}"
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: dist/*

      - name: Archive files
        shell: bash
        run: |
          version=${GITHUB_REF#refs/tags/}
          extra="README.md LICENSE"
          cd dist
          cp ../{README.md,LICENSE} .
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            7z a "$BINNAME.zip" $BINNAME $extra
          elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            7z a "$BINNAME.zip" $BINNAME${{ matrix.ext }} $extra
          else   
            7z a "$BINNAME.zip" $BINNAME $extra
          fi
          cd ..
      
  upload-release-assets:
    if: ${{ github.event.release }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: release-binaries
          
      - name: List release-binaries contents
        run: ls -l release-binaries
        
      - name: List linux-binary contents
        run: ls -l release-binaries/linux-binary
        
      - name: List windows-binary contents
        run: ls -l release-binaries/windows-binary
        
      - name: List macos-binary contents
        run: ls -l release-binaries/macos-binary
        
      - name: Upload binaries to release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            release-binaries/linux-binary/*
            release-binaries/windows-binary/*
            release-binaries/macos-binary/*
            
